{% extends 'haproxy.cfg.j2' %}
{% block proxy_configuration %}
frontend haproxy
    mode http
    bind [::]:80 v4v6
    bind [::]:443 v4v6 ssl crt {{ haproxy_crt_dir }}
    # Redirect HTTP to HTTPS
    http-request redirect scheme https unless { ssl_fc }

{% for backend in backends %}
{% if backend.path_acl_required %}
    acl acl_path_{{ backend.backend_name }} path_beg -i {% for path in backend.application_data.paths %}{{ path }} {% endfor +%}
{% endif %}
    acl acl_host_{{ backend.backend_name }} req.hdr(Host) -m str {% for hostname in backend.hostname_acls%}{{hostname}} {% endfor +%}
{% if backend.deny_path_acl_required %}
    acl acl_deny_path_{{ backend.backend_name }} path_beg -i {% for path in backend.application_data.deny_paths %}{{ path }} {% endfor +%}
{% endif %}
    use_backend {{ backend.backend_name }} if {% if backend.path_acl_required %}acl_path_{{ backend.backend_name }}{% endif %} acl_host_{{ backend.backend_name }} {% if backend.deny_path_acl_required %}!acl_deny_path_{{ backend.backend_name }}{% endif +%}
{% endfor %}

    default_backend default

peers haproxy_peers
{% for address in peer_units_address %}
    peer {{ address }}
{% endfor %}
{% for entry in stick_table_entries %}
    table {{ entry }} type ip size 100k expire 2m store http_req_rate(1m)
{% endfor %}

{% for backend in backends %}
backend {{ backend.backend_name }}
    balance {{ backend.load_balancing_configuration }}
    timeout server {{ backend.application_data.timeout.server }}s
    timeout connect {{ backend.application_data.timeout.connect }}s
    timeout queue {{ backend.application_data.timeout.queue }}s

    option httpchk {% if backend.application_data.check.path %}GET {{ backend.application_data.check.path }}{% endif +%}
{% if backend.application_data.check.port %}
    http-check connect port {{ backend.application_data.check.port }}
{% endif %}
    http-check send hdr Host {{ backend.hostname_acls[0] }}
{% if backend.application_data.rate_limit %}
    http-request track-sc0 src table  haproxy_peers/{{ backend.backend_name }}_rate_limit
    http-request {{ backend.application_data.rate_limit.policy.value }} if { sc_http_req_rate(0,haproxy_peers/{{ backend.backend_name }}_rate_limit) gt {{ backend.application_data.rate_limit.connections_per_minute }} }
{% endif %}
{% if backend.application_data.bandwidth_limit.download %}

    filter bwlim-out download default-limit {{ backend.application_data.bandwidth_limit.download }} default-period 1s
    http-response set-bandwidth-limit download
{% endif %}
{% if backend.application_data.bandwidth_limit.upload %}
    filter bwlim-in upload default-limit {{ backend.application_data.bandwidth_limit.upload }} default-period 1s
    http-request set-bandwidth-limit upload
{% endif %}
{% for rewrite_configuration in backend.rewrite_configurations %}
    http-request {{ rewrite_configuration }}
{% endfor %}
{% for server in backend.servers %}
    server \
        {{ server.server_name }} {{ server.address }}:{{ server.port }} \
        check inter {{ server.check.interval }}s rise {{ server.check.rise }} fall {{ server.check.fall }} \
        {% if server.protocol == "https" %} ssl ca-file @system-ca {% endif %}
{% endfor %}

{% endfor %}
{% endblock %}
